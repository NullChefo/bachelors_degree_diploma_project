server:
  port: 8000

spring:
  application:
    name: gateway-service
  devtools:
    livereload:
      port: 35730
  #  output.ansi.enabled: ALWAYS
  data:
    redis:
      host: ${REDIS_HOST:localhost}
  #      username: ${REDIS_USERNAME:username}
  #      password: ${REDIS_PASSWORD:username}

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AUTHORIZATION_SERVER_URL:http://authorization:9000}
          jwk-set-uri: ${AUTHORIZATION_SERVER_URL:http://authorization:9000}/oauth2/jwks
  cloud:
    gateway:
      # default-filters is applied for all the endpoints
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
        #        - TokenRelay
        # Retries
        - name: Retry
          args:
            # count of retries
            retries: 3
            method: GET
            backoff:
              firstBackoff: 50ms
              maxBackoff: 3500ms
      discovery:
        locator:
          enabled: false
      routes:
        - id: user-service-route
          uri: http://localhost:8082
          predicates:
            - Path=/user/**
          filters:
            - RewritePath=/user/(?<segment>.*), /$\{segment}
            # TODO add CircuitBreaker to every service
        #            - name: CircuitBreaker
        #              args:
        #                name: userService
        #                fallbackUri: forward:/user-service-fallback

        - id: auth-service-route
          # lb://auth-service:8086 || lb://auth-service
          uri: http://localhost:8086
          predicates:
            - Path=/auth/**
          filters:
            - RewritePath=/api/auth/(?<segment>.*), /$\{segment}
        - id: mail-process-service-route
          # lb://mail-process-service:8084 || lb://mail-process-service
          uri: http://localhost:8084
          predicates:
            - Path=/mail/**
          filters:
            - RewritePath=/api/mail/(?<segment>.*), /$\{segment}
        - id: car-history-service-route
          # lb://car-history-service:8085 || lb://car-history-service
          uri: http://localhost:8085
          predicates:
            - Path=/car-history/**
          filters:
            - RewritePath=/car-history/(?<segment>.*), /$\{segment}
        - id: social-media-service-route
          # lb://car-history-service:8085 || lb://car-history-service
          uri: http://localhost:8092
          predicates:
            - Path=/social-media/**
          filters:
            - RewritePath=/social-media/(?<segment>.*), /$\{segment}
        - id: authorization-service-route
          uri: http://localhost:9000
          predicates:
            - Path=/authorization/**
          filters:
            - RewritePath=/authorization/(?<segment>.*), /$\{segment}

        - id: mail-send-route
          uri: http://localhost:8083
          predicates:
            - Path=/mail-send/**
          filters:
            - RewritePath=/mail-send/(?<segment>.*), /$\{segment}

        - id: mail-process-route
          uri: http://localhost:8084
          predicates:
            - Path=/mail-process/**
          filters:
            - RewritePath=/mail-process/(?<segment>.*), /$\{segment}


      #      globalcors:
      #        corsConfigurations:
      #          '[/api/**]':
      #            allowedOrigins:
      #              - http://localhost:4200
      #              - http://127.0.0.1:4200
      #              - http://localhost:8080
      #              - http://127.0.0.1:8080
      #              - http://localhost:4200
      #              - http://127.0.0.1:4200
      #              - https://mail.nullchefo.com
      #              - https://nullchefo.com
      #              - https://auth.nullchefo.com
      #              - https://disploma-project.nullchefo.com
      #            allowedMethods: "*"
      #            allowedHeaders: "*"
      #            allowCredentials: true
      #          '[/**]':
      #            allowedOrigins: "*"
      #            allowedMethods: "*"
      #            allowedHeaders: "*"

#      globalcors:
#        corsConfigurations:
#          '[/**]':
#            # TODO change
#            allowedOrigins:
#              - https://diploma-project.nullchefo.com
#              - http://localhost:4200
#              - http://127.0.0.1:4200
#              - http://localhost:8000
#              - http://127.0.0.1:8000
#              - http://localhost:8092
#              - http://127.0.0.1:8092
#            allowCredentials: true
#            allowedMethods: "*"
#            allowedHeaders: "*"

logging:
  level:
    root: INFO
    org.springframework.web: TRACE
    org.springframework.security: TRACE
    org.springframework.security.oauth2: TRACE
    org.springframework.cloud.gateway: TRACE
    org.springframework.security.jwt: TRACE



management:
  server:
    # actuator port
    port: 8100
  #  server:
  #    port: 8081
  #    ssl:
  #      enabled: false

  # zipkin:
  #  tracing:
  #    endpoint: ${ZIPKIN_URL:"http://localhost:9411"}
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        all: true
        http.server.requests: true
  tracing:
    sampling:
      probability: 1.0
  prometheus:
    metrics:
      export:
        step: 10s
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true


      #resilience4j:
      #  circuitbreaker:
      #    instances:
      #      userService:
      #        # will consider the last 10 request
      #        slidingWindowSize: 10
      #        permitted-number-of-calls-in-half-open-state: 5
      #        # if 50% of the 10 request failed it will open
      #        failureRateThreshold: 50
      #        # when it is open will stay in open state for 10000 ms (10s);
      #        #  after the 10 second it will stay half-open state then
      #        #  it will allow only 5 request (permitted-number-of-calls-in-half-open-state: 5)
      #        # and if 50 % of the request are failing then will open again but
      #        #  if they succeed then the braked will be closed.
      #        wait-duration-in-open-state: 10000
      #        registerHealthIndicator: true
      ##        recordExceptions:
      ##          - org.springframework.web.client.HttpServerErrorException
      ##          - java.util.concurrent.TimeoutException
      ##          - java.io.IOException
      #  # this is for timing out the request;
      #  # if the request is slow and 3 seconds pass
      #  # the request is count to failed requests
      #  timelimiter:
      #    instances:
      #      userService:
      #        timeout-duration: 3s

      # logging.pattern.console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]){yellow} %clr(:){red} %clr(%m){faint}%n" # (3)



      # TODO comment this

#      # -------------- ENABLE BELOW FOR TROUBLESHOOTING ----------
#      httpserver:
#        wiretap: true
#      httpclient:
#        wiretap: true

#logging:
#  level:
#    root: error
#    reactor.netty: trace
#    org.springframework.cloud.gateway: trace
#    org.springframework.http.server.reactive: trace
#  pattern:
#    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
#
## ---------------------------------------------------------


#springdoc:
#  api-docs:
#    path: "/docs/api"
#  swagger-ui:
#    path: "/swagger-ui.html"


springdoc:
  enable-native-support: true
  api-docs:
    enabled: true
    path: /v1/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    oauth:
      use-pkce-with-authorization-code-grant: true
      client-id: swagger-client
    #   use-root-path: true
    oauth2-redirect-url: http://127.0.0.1:8000/webjars/swagger-ui/4.18.1/oauth2-redirect.html
    urls:
      - url: /v1/api-docs
        name: API Gateway Service
        display-name: API Gateway Service

      - url: /social-media/v1/api-docs
        name: Social Media Service
        display-name: Social Media Service

      - url: /authorization/v1/api-docs
        name: Authorization Service
        display-name: Authorization Service

      - url: /mail-process/v1/api-docs
        name: Mail Process Service
        display-name: Mail Process Service

      - url: /mail-send/v1/api-docs
        name: Mail Send Service
        display-name: Mail Send Service

      - url: /user/v1/api-docs
        name: User Service
        display-name: User Service

      - url: /car-history/v1/api-docs
        name: Car History Service
        display-name: Car History Service
